# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: terraform-google-network-network-firewall-policy
  annotations:
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: Google Cloud Network Firewall Policy
    source:
      repo: https://github.com/terraform-google-modules/terraform-google-network.git
      sourceType: git
      dir: /modules/network-firewall-policy
    version: 10.0.0
    actuationTool:
      flavor: Terraform
      version: ">= 1.3.0"
    description: {}
  content:
    examples:
      - name: basic_auto_mode
        location: examples/basic_auto_mode
      - name: basic_custom_mode
        location: examples/basic_custom_mode
      - name: basic_firewall_rule
        location: examples/basic_firewall_rule
      - name: basic_secondary_ranges
        location: examples/basic_secondary_ranges
      - name: basic_shared_vpc
        location: examples/basic_shared_vpc
      - name: basic_vpc_peering
        location: examples/basic_vpc_peering
      - name: bidirectional-firewall-rules
        location: examples/bidirectional-firewall-rules
      - name: delete_default_gateway_routes
        location: examples/delete_default_gateway_routes
      - name: firewall_logging
        location: examples/firewall_logging
      - name: global-network-firewall-policy
        location: examples/global-network-firewall-policy
      - name: hierarchical-firewall-policy
        location: examples/hierarchical-firewall-policy
      - name: ilb_routing
        location: examples/ilb_routing
      - name: multi_vpc
        location: examples/multi_vpc
      - name: network_service_tiers
        location: examples/network_service_tiers
      - name: packet_mirroring
        location: examples/packet_mirroring
      - name: private_service_connect
        location: examples/private_service_connect
      - name: private_service_connect_google_apis
        location: examples/private_service_connect_google_apis
      - name: regional-network-firewall-policy
        location: examples/regional-network-firewall-policy
      - name: routes
        location: examples/routes
      - name: secondary_ranges
        location: examples/secondary_ranges
      - name: simple_ipv6_project
        location: examples/simple_ipv6_project
      - name: simple_project
        location: examples/simple_project
      - name: simple_project_with_regional_network
        location: examples/simple_project_with_regional_network
      - name: submodule_firewall
        location: examples/submodule_firewall
      - name: submodule_network_peering
        location: examples/submodule_network_peering
      - name: submodule_svpc_access
        location: examples/submodule_svpc_access
      - name: submodule_vpc_serverless_connector
        location: examples/submodule_vpc_serverless_connector
  interfaces:
    variables:
      - name: description
        description: An optional description of this resource. Provide this property when you create the resource
        varType: string
      - name: policy_name
        description: User-provided name of the Network firewall policy
        varType: string
        required: true
      - name: policy_region
        description: Location of the firewall policy. Needed for regional firewall policies. Default is null (Global firewall policy)
        varType: string
      - name: project_id
        description: Project ID of the Network firewall policy
        varType: string
        required: true
      - name: rules
        description: List of Ingress/Egress rules
        varType: |-
          list(object({
              priority                = number
              direction               = string
              action                  = string
              rule_name               = optional(string)
              disabled                = optional(bool)
              description             = optional(string)
              enable_logging          = optional(bool)
              target_secure_tags      = optional(list(string))
              target_service_accounts = optional(list(string))
              match = object({
                src_ip_ranges             = optional(list(string), [])
                src_fqdns                 = optional(list(string), [])
                src_region_codes          = optional(list(string), [])
                src_secure_tags           = optional(list(string), [])
                src_threat_intelligences  = optional(list(string), [])
                src_address_groups        = optional(list(string), [])
                dest_ip_ranges            = optional(list(string), [])
                dest_fqdns                = optional(list(string), [])
                dest_region_codes         = optional(list(string), [])
                dest_threat_intelligences = optional(list(string), [])
                dest_address_groups       = optional(list(string), [])
                layer4_configs = optional(list(object({
                  ip_protocol = optional(string, "all")
                  ports       = optional(list(string), [])
                })), [{}])
              })
            }))
        defaultValue: []
      - name: target_vpcs
        description: List of target VPC IDs that the firewall policy will be attached to
        varType: list(string)
        defaultValue: []
    outputs:
      - name: fw_policy
        description: Firewall policy created
      - name: rules
        description: Firewall policy rules created
      - name: vpc_associations
        description: VPC associations created
  requirements:
    roles:
      - level: Project
        roles:
          - roles/compute.networkAdmin
          - roles/compute.securityAdmin
          - roles/iam.serviceAccountUser
          - roles/vpcaccess.admin
          - roles/serviceusage.serviceUsageAdmin
          - roles/dns.admin
          - roles/resourcemanager.tagAdmin
          - roles/iam.serviceAccountAdmin
          - roles/compute.orgFirewallPolicyAdmin
    services:
      - cloudresourcemanager.googleapis.com
      - compute.googleapis.com
      - serviceusage.googleapis.com
      - vpcaccess.googleapis.com
      - dns.googleapis.com
      - networksecurity.googleapis.com
      - iam.googleapis.com
