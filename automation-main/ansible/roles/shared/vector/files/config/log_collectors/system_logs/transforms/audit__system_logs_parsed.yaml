---
# +----------------------------------------------------------------------------------------+
# | __   __      _             _                   _              ___           __ _       |
# | \ \ / /__ __| |_ ___ _ _  | |   ___  __ _ __ _(_)_ _  __ _   / __|___ _ _  / _(_)__ _  |
# |  \ V / -_) _|  _/ _ \ '_| | |__/ _ \/ _` / _` | | ' \/ _` | | (__/ _ \ ' \|  _| / _` | |
# |   \_/\___\__|\__\___/_|   |____\___/\__, \__, |_|_||_\__, |  \___\___/_||_|_| |_\__, | |
# |                                     |___/|___/       |___/                      |___/  |
# | Managed by Ansible                                                                     |
# +----------------------------------------------------------------------------------------+
#
# Description: auditd log source transforms
# Vector Output Name: audit__system_logs_parsed
# Notes:
# +----------------------------------------------------------------------------------------+

type: remap
inputs:
  - audit_metadata
drop_on_error: true
reroute_dropped: true
drop_on_abort: true
source: |
  message_parts, err = split(.message, ":", 3)
  if err != null {
      abort "error parsing log: {{err}}"
  }

  message_parts, err = [ message_parts[0] + ":" + message_parts[1], message_parts[2] ]

  .timestamp, err = from_unix_timestamp(to_int(to_float!(parse_regex!(message_parts[0], r'audit\((?P<ts>\d+\.\d+)').ts) * 1000), "milliseconds")
  if err != null {
      abort "error parsing timestamp: {{err}}"
  }
...
