---
# +----------------------------------------------------------------------------------------+
# | __   __      _             _                   _              ___           __ _       |
# | \ \ / /__ __| |_ ___ _ _  | |   ___  __ _ __ _(_)_ _  __ _   / __|___ _ _  / _(_)__ _  |
# |  \ V / -_) _|  _/ _ \ '_| | |__/ _ \/ _` / _` | | ' \/ _` | | (__/ _ \ ' \|  _| / _` | |
# |   \_/\___\__|\__\___/_|   |____\___/\__, \__, |_|_||_\__, |  \___\___/_||_|_| |_\__, | |
# |                                     |___/|___/       |___/                      |___/  |
# | Managed by Ansible                                                                     |
# +----------------------------------------------------------------------------------------+
#
# Description: SAP BOBJ Server Config Log Transforms
# Vector Output Name: sap_bobj_logging_server_config__sap_logs_parsed
# Notes:
#  - Outpus a JSON object that includes a message field
# +----------------------------------------------------------------------------------------+

type: remap
inputs:
  - sap_bobj_logging_server_config_metadata
drop_on_error: true
reroute_dropped: true
source: |
  .fields, err = parse_grok(.message, "%{DAY:weekday} %{MONTH:month} %{MONTHDAY:day} %{YEAR:year} %{TIME:time} %{WORD:timezone}%{NUMBER:tz_offset} \\(%{TZ}\\) (%{LOGLEVEL}:)? %{GREEDYDATA:message}")
  if err != null {
      abort "error parsing log: {{err}}"
  }
  .ts, err = join([del(.fields.weekday), del(.fields.month), del(.fields.day), del(.fields.year), del(.fields.time), del(.fields.timezone), del(.fields.tz_offset)], " ")
  if err != null {
      abort "error parsing timestamp fields: {{err}}"
  }
  .timestamp, err = parse_timestamp(del(.ts), "%a %b %d %Y %T %Z %z")
  if err != null {
      abort "error parsing timestamp: {{err}}"
  }
  .message = del(.fields.message)
...
