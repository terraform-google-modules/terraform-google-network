---
# +----------------------------------------------------------------------------------------+
# | __   __      _             _                   _              ___           __ _       |
# | \ \ / /__ __| |_ ___ _ _  | |   ___  __ _ __ _(_)_ _  __ _   / __|___ _ _  / _(_)__ _  |
# |  \ V / -_) _|  _/ _ \ '_| | |__/ _ \/ _` / _` | | ' \/ _` | | (__/ _ \ ' \|  _| / _` | |
# |   \_/\___\__|\__\___/_|   |____\___/\__, \__, |_|_||_\__, |  \___\___/_||_|_| |_\__, | |
# |                                     |___/|___/       |___/                      |___/  |
# | Managed by Ansible                                                                     |
# +----------------------------------------------------------------------------------------+
#
# Description: tuned log transforms
# Vector Output Name: tuned__system_logs_parsed
# Notes:
#
# +----------------------------------------------------------------------------------------+

type: remap
inputs:
  - tuned_metadata
drop_on_abort: true
drop_on_error: true
reroute_dropped: true
source: |
  .message, err = parse_regex(.message, r'(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}),(?P<id>\d+)\s+(?P<level>\S+)\s+(?P<component>\S+): (?P<message>.*)')
  if err != null {
      abort "error parsing log: {{err}}"
  }
  .timestamp, err = parse_timestamp(.message.timestamp, "%Y-%m-%d %H:%M:%S")
  if err != null {
      abort "error parsing timestamp: {{err}}"
  }
...
