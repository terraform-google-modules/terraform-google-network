---
# Synopsis: Silent installation of SAP IPS, SAP Data Services, and SAP Information Steward
# Inputs:
#   spr_app_install_hostname: Hostname of the application instance
#   spr_app_install_sid: Sid of the application instance
#   spr_app_install_hdbclient_source: Filepath to the hdbclient hdbinst executable
#   spr_app_install_file_ini_params_ips: Filepath to the configuration file for ips, ips-response.ini
#   spr_app_install_file_ini_params_data_services: Filepath to the configuration file for data services, ds-response.ini
#   spr_app_install_file_ini_params_information_steward: Filepath to the configuration file for information steward, is-response.ini
#   spr_app_install_domain: FQDN of the target environment
#   spr_app_install_product: Product to install
#   spr_app_install_db_hostname: Hostname of the SAP Data Services HANA database
#   spr_app_install_file_ips_setup_sh: Filepath to the setup.sh executable for SAP Platform Services, found under the Media directory. For IPS, it should be from media ending with 'ONE'
#   spr_app_install_file_data_services_setup_sh: Filepath to the setup.sh executable for SAP Data Services, found under the Media directory
#   spr_app_install_file_information_steward_setup_sh: Filepath to the setup.sh executable for SAP Information Steward, found under the Media directory
#   spr_app_install_productkey_ips: Productkey for IPS
#   spr_app_install_productkey_data_services: Productkey for Data Services
#   spr_app_install_productkey_information_steward: Productkey for Information Steward
# Outputs:
# Comments:

- name: Install required prerequisite packages
  become: true
  yum:
    name:
    - ksh
    - libnsl.so.1
    - libnsl.i686
    - libstdc++.i686
    - libstdc++.x86_64
    - glibc.i686
    - glibc.x86_64
    - libX11.i686
    - libX11.x86_64
    - libXext.i686
    - libXext.x86_64
    - expat.i686
    - expat.x86_64
    - libgcc.i686
    - libgcc.x86_64
    - libXcursor.i686
    - libXcursor.x86_64
    - libXrender.i686
    - libXrender.x86_64
    - libXfixes.i686
    - libXfixes.x86_64
    - libxcb.i686
    - libxcb.x86_64
    - libXau.i686
    - libXau.x86_64
    - xz-libs.i686
    - libnsl-2.28-42.el8.i686
    - libxcrypt-4.1.1-4.el8.i686
    - libnsl.x86_64
    - xz-libs-5.2.4-3.el8.i686
    state: present

# BEGIN BLOCK: Install SAP IPS
- name: "BLOCK: Install SAP IPS"
  block:
      - name: Create [sid]adm user
        become: true
        ansible.builtin.user:
          name: "{{ spr_app_install_sid|lower }}adm"
          group: sapsys
          shell: '/bin/bash'
          comment: "SAP System Administrator"

      - name: Create /usr/sap/{{ spr_app_install_sid|upper }}/tmp
        become: true
        file:
          path: "/usr/sap/{{ spr_app_install_sid|upper }}/tmp/"
          state: directory
          owner: "{{ spr_app_install_sid|lower }}adm"
          group: sapsys

      - name: Set ulimit for [sid]adm
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        shell: ulimit

      - name: Create the installation directory /usr/sap/hdbclient
        become: true
        file:
          path: '/usr/sap/hdbclient'
          state: directory
          owner: "{{ spr_app_install_sid|lower }}adm"
          group: sapsys

      - name: Install HDB Client
        become: true
        ansible.builtin.expect:
          command: "{{ spr_app_install_hdbclient_source }}"
          responses:
            Enter Installation Path \[\/usr\/sap\/hdbclient\]: /usr/sap/hdbclient
        args:
          chdir: '/usr/sap/hdbclient'

      - name: Create odbc directory
        become: true
        file:
          path: '/usr/sap/{{ spr_app_install_sid|upper }}/odbc'
          state: directory
          owner: "{{ spr_app_install_sid|lower}}adm"
          group: sapsys

      - name: Create odbc.ini
        become: true
        copy:
          dest: "/usr/sap/{{ spr_app_install_sid|upper }}/odbc/odbc.ini"
          owner: "{{ spr_app_install_sid|lower }}adm"
          group: sapsys
          content: |
            [SAP_HANA_ODBC]
            Driver=/usr/sap/hdbclient/libodbcHDB.so
            DriverUnicodeType=1
            CHAR_AS_UTF8=1
            ServerNode={{ spr_app_install_db_hostname }}:30015

# Add ODBC environment variables (ODBCHOME, ODBCINI, LD_LIBRARY_PATH etc) to <sid>adm user
      - name: Modify .bashrc of <sid>adm user
        become: true
        become_user:  "{{ spr_app_install_sid|lower }}adm"
        blockinfile:
          state: present
          insertafter: EOF
          dest: ~/.bashrc
          content: |
            # User specific environment
            ODBCHOME=/usr/sap/hdbclient
            export ODBCHOME
            ODBCINI=/usr/sap/{{ spr_app_install_sid|upper }}/odbc/odbc.ini
            export ODBCINI
            PATH="$HOME/.local/bin:$HOME/bin:$PATH:$ODBCHOME:$ODBCINI"
            export PATH
            LD_LIBRARY_PATH=/usr/sap/hdbclient
            export LD_LIBRARY_PATH

# Let us create the script for  DB users creation for the BODS install
      - name: Create DBUSERS.sql
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        no_log: true
        copy:
          dest: "/tmp/dbusers.sql"
          owner: "{{ spr_app_install_sid|lower }}adm"
          group: sapsys
          content: |
            CREATE USER CMSADMIN PASSWORD QwerRewq123 NO FORCE_FIRST_PASSWORD_CHANGE;
            CREATE USER AUDITDSADMIN PASSWORD QwerRewq123 NO FORCE_FIRST_PASSWORD_CHANGE;
            CREATE USER DSADMIN PASSWORD QwerRewq123 NO FORCE_FIRST_PASSWORD_CHANGE;
            CREATE USER ISADMIN PASSWORD QwerRewq123 NO FORCE_FIRST_PASSWORD_CHANGE;
            ALTER USER CMSADMIN DISABLE PASSWORD LIFETIME;
            ALTER USER AUDITDSADMIN DISABLE PASSWORD LIFETIME;
            ALTER USER DSADMIN DISABLE PASSWORD LIFETIME;
            ALTER USER ISADMIN DISABLE PASSWORD LIFETIME;

# Let us execute the script for  DB users creation for the BODS install
      - name: Create the DB Users for BODS Install
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        no_log: true
        shell:
          "source ~/.bashrc;
          hdbsql -i 00 -n {{ spr_app_install_db_hostname }}:30015 -u SYSTEM -p QwerRewq123 -I /tmp/dbusers.sql"
        args:
          chdir: '/'

# Let us remove the script for  DB users creation
      - name: Remove DBUSERS.sql
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        ansible.builtin.file:
          path:  "/tmp/dbusers.sql"
          state: absent

      - name: Save configuration file to /usr/sap/{{ spr_app_install_sid|upper }}/tmp
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        copy:
          dest: "/usr/sap/{{ spr_app_install_sid|upper }}/tmp/"
          src: "{{ spr_app_install_file_ini_params_ips }}"
          force: yes
          remote_src: yes

      - name: Update SAP IPS inifile.params values
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        no_log: true
        ini_file:
          path: "/usr/sap/{{ spr_app_install_sid|upper }}/tmp/{{ spr_app_install_file_ini_params_ips.split('/')[-1] }}"
          create: no
          section: null
          option: "{{ item.name }}"
          value: '{{ item.value }}'
          no_extra_spaces: true
        loop_control:
          label: "Modifying value of {{ item.name }} to {{ item.value }} in {{ spr_app_install_file_ini_params_ips }}"
        loop:
          - { name: 'clusterkey', value: 'NS2SPRClusterKey' }
          - { name: 'cmspassword', value: '{{ standard_deployment_password }}' }
          - { name: 'existingauditingdbdsn', value: 'SAP_HANA_ODBC' }
          - { name: 'existingauditingdbpassword', value: '{{ standard_deployment_password }}' }
          - { name: 'existingauditingdbuser', value: 'AUDITDSADMIN' }
          - { name: 'existingcmsdbdsn', value: 'SAP_HANA_ODBC' }
          - { name: 'existingcmsdbpassword', value: '{{ standard_deployment_password }}' }
          - { name: 'existingcmsdbuser', value: 'CMSADMIN' }
          - { name: 'installdir', value: '/usr/sap/{{ spr_app_install_sid|upper }}/' }
          - { name: 'lcmpassword', value: '{{ standard_deployment_password }}' }
          - { name: 'productkey', value: "{{ spr_app_install_productkey_ips }}" }
          - { name: 'sianame', value: '{{ spr_app_install_hostname }}' }

# Run the .bashrc as soon as Shell is invoked. Otherwise setup fails with ODBC related errors
# Also the BOBJ Installs must be performed as <sid>adm user. Not the root user
      - name: Execute silent installation of SAP IPS
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        shell:
          "source ~/.bashrc;
          {{ spr_app_install_file_ips_setup_sh }}
          -r /usr/sap/{{ spr_app_install_sid|upper }}/tmp/{{ spr_app_install_file_ini_params_ips.split('/')[-1] }}
          -InstallDir /usr/sap/{{ spr_app_install_sid|upper }}"
        args:
          chdir: '/'

# Let us remove the IPS ini file after install
      - name: Remove IPS ini file after install
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        ansible.builtin.file:
          path:  "/usr/sap/{{ spr_app_install_sid|upper }}/tmp/{{ spr_app_install_file_ini_params_ips.split('/')[-1] }}"
          state: absent

# END BLOCK: Install SAP IPS

# BEGIN BLOCK: Install SAP Data Services
- name: "BLOCK: Install SAP Data Services"
  block:
      - name: "Save configuration file to /usr/sap/{{ spr_app_install_sid|upper }}/tmp for SAP Data Services"
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        copy:
          dest: "/usr/sap/{{ spr_app_install_sid|upper }}/tmp"
          src: "{{ spr_app_install_file_ini_params_data_services }}"
          force: yes
          remote_src: yes

      - name: "Update inifile.params values for SAP Data Services"
        become: true
        no_log: true
        ini_file:
          path: "/usr/sap/{{ spr_app_install_sid|upper }}/tmp/{{ spr_app_install_file_ini_params_data_services.split('/')[-1] }}"
          create: no
          section: null
          option: "{{ item.name }}"
          value: '{{ item.value }}'
          no_extra_spaces: true
        loop_control:
          label: "Modifying value of {{ item.name }} to {{ item.value }} in {{ spr_app_install_file_ini_params_data_services }}"
        loop:
          - { name: 'installdir', value: '/usr/sap/{{ spr_app_install_sid|upper }}/' }
          - { name: 'dscmspassword', value: '{{ standard_deployment_password }}' }
          - { name: 'dscmsuser', value: 'Administrator' }
          - { name: 'dsrepodbuser', value: 'DSADMIN' }
          - { name: 'dscmssystem', value: '{{ spr_app_install_hostname }}' }
          - { name: 'dsrepodbpasswd', value: '{{ standard_deployment_password }}' }
          - { name: 'dsrepohostmachine', value: '{{ spr_app_install_db_hostname }}' }
          - { name: 'dsreponameforcms', value: 'Repo_{{ spr_app_install_hostname }}' }
          - { name: 'eimdbenv', value: '/usr/sap/hdbclient/libodbcHDB.so' }
          - { name: 'productkey', value: "{{ spr_app_install_productkey_data_services }}" }

# Run the .bashrc as soon as Shell is invoked. Otherwise setup fails with ODBC related errors
# Also the BOBJ Installs must be performed as <sid>adm user. Not the root user

      - name: Execute silent installation of SAP Data Services
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        shell:
          "source ~/.bashrc;
          {{ spr_app_install_file_data_service_setup_sh }}
          -r /usr/sap/{{ spr_app_install_sid|upper }}/tmp/{{ spr_app_install_file_ini_params_data_services.split('/')[-1] }}
          -InstallDir /usr/sap/{{ spr_app_install_sid|upper }}"
        args:
          chdir: '/'

# Let us remove the DS ini file after install
      - name: Remove DS ini file after install
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        ansible.builtin.file:
          path:  "/usr/sap/{{ spr_app_install_sid|upper }}/tmp/{{ spr_app_install_file_ini_params_data_services.split('/')[-1] }}"
          state: absent


# END BLOCK: Install SAP Data Services

# BEGIN BLOCK: Install SAP Information Steward
- name: "BLOCK: Install SAP Information Steward"
  block:
      - name: "Save configuration file to /usr/sap/{{ spr_app_install_sid|upper }}/tmp for SAP Information Steward"
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        copy:
          dest: "/usr/sap/{{ spr_app_install_sid|upper }}/tmp"
          src: "{{ spr_app_install_file_ini_params_information_steward }}"
          force: yes
          remote_src: yes

      - name: "Update inifile.params values for SAP Information Steward"
        become: true
        no_log: true
        ini_file:
          path: "/usr/sap/{{ spr_app_install_sid|upper }}/tmp/{{ spr_app_install_file_ini_params_information_steward.split('/')[-1] }}"
          create: no
          section: null
          option: "{{ item.name }}"
          value: '{{ item.value }}'
          no_extra_spaces: true
        loop_control:
          label: "Modifying value of {{ item.name }} to {{ item.value }} in {{ spr_app_install_file_ini_params_information_steward }}"
        loop:
          - { name: 'installdir', value: '/usr/sap/{{ spr_app_install_sid|upper }}/' }
          - { name: 'iscmspassword', value: '{{ standard_deployment_password }}' }
          - { name: 'isrepodbhost', value: '{{ spr_app_install_db_hostname }}' }
          - { name: 'iscmssystemstr', value: '{{ spr_app_install_hostname }}' }
          - { name: 'isrepodbname', value: 'ISADMIN' }
          - { name: 'isrepodbuser', value: 'ISADMIN' }
          - { name: 'isrepodbpasswd', value: '{{ standard_deployment_password }}' }
          - { name: 'productkey', value: "{{ spr_app_install_productkey_information_steward }}" }

# Run the .bashrc as soon as Shell is invoked. Otherwise setup fails with ODBC related errors
# Also the BOBJ Installs must be performed as <sid>adm user. Not the root user

      - name: Execute silent installation of SAP Information Steward
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        shell:
          "source ~/.bashrc;
          {{ spr_app_install_file_information_steward_setup_sh }}
          -r /usr/sap/{{ spr_app_install_sid|upper }}/tmp/{{ spr_app_install_file_ini_params_information_steward.split('/')[-1] }}
          -InstallDir /usr/sap/{{ spr_app_install_sid|upper }}"
        args:
          chdir: '/'

# Let us remove the IS ini file after install
      - name: Remove IS ini file after install
        become: true
        become_user: "{{ spr_app_install_sid|lower }}adm"
        ansible.builtin.file:
          path:  "/usr/sap/{{ spr_app_install_sid|upper }}/tmp/{{ spr_app_install_file_ini_params_information_steward.split('/')[-1] }}"
          state: absent

# END BLOCK: Install SAP Information Steward
...
