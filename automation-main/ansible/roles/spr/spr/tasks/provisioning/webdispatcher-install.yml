# Synopsis: Provisions Webdispatcher
# Inputs:
#   spr_app_install_source: Source folder for the application install binaries
#   spr_app_install_file_ini_params: Location of the input parameters file
#   spr_app_install_file_instkey: Location of the instkey.pkey file
#   spr_app_install_file_swpm_sapinst: Location of the SWPM Sapinst
#   spr_app_install_sid: Target SID of the instance
#   spr_app_install_product: Product to install
# Outputs:
# Comments:

- name: "Remove /tmp/sapinst_instdir"
  become: true
  file:
    path: '/tmp/sapinst_instdir'
    state: absent

- name: "Extract Webdispatcher Tars"
  include_tasks: general/tar-extract.yml
  vars:
    spr_tar_extract_list:
      - "{{ spr_app_install_source }}/usr-sap.tgz-*"
    spr_tar_extract_overwrite: false
    spr_tar_extract_async: false

- name: "BLOCK: sapinst"
  block:
      - name: "Create /tmp/{{ spr_app_install_product }}"
        file:
          path: '/tmp/{{ spr_app_install_product }}'
          state: directory

      - name: "Save Configuration Files to /tmp/{{ spr_app_install_product }}"
        copy:
          dest: '/tmp/{{ spr_app_install_product }}/'
          src: "{{ item }}"
          force: yes
          remote_src: yes
        loop_control:
          label: "Saving /tmp/{{ spr_app_install_product }}/{{ item | basename }}"
        loop:
          - "{{ spr_app_install_file_ini_params }}"
          - "{{ spr_app_install_file_instkey }}"

      - name: "Update inifile.params values"
        ini_file:
          path: "/tmp/{{ spr_app_install_product }}/{{ spr_app_install_file_ini_params.split('/')[-1] }}"
          create: no
          section: null
          option: "{{ item.name }}"
          value: '{{ item.value }}'
          no_extra_spaces: true
        loop_control:
          label: "Modifying value of {{ item.name }} to {{ item.value }} in {{ spr_app_install_file_ini_params }}"
        loop:
          - { name: 'storageBasedCopy.fqdn', value: '{{ spr_app_install_domain }}' }
          - { name: 'storageBasedCopy.instanceList', value: '{{ instance_list[ spr_productname ] }}' }
          - { name: 'storageBasedCopy.sidTarget', value: '{{ spr_app_install_sid|upper }}' }
        become: true

      - name: "Ensure sapinst is executable"
        become: true
        file:
          path: "{{ spr_app_install_file_swpm_sapinst }}"
          state: file
          mode: a+x

      - name: "Execute SAPInst"
        become: true
        shell: >-
          {{ spr_app_install_file_swpm_sapinst }}
          SAPINST_INPUT_PARAMETERS_URL=/tmp/{{ spr_app_install_product }}/{{ spr_app_install_file_ini_params.split('/')[-1] }}
          SAPINST_EXECUTE_PRODUCT_ID=NW_StorageBasedCopy
          SAPINST_SKIP_DIALOGS=true
          SAPINST_START_GUISERVER=false
        args:
          chdir: '/'

      - name: "Remove /tmp/{{ spr_app_install_product }}"
        file:
          path: '/tmp/{{ spr_app_install_product }}'
          state: absent
...
