---
# Playbook Name: s4-stop-hana.yml
# Synopsis: Stops the S4 Hana Database
# Description: Standalone playbook that stops the S4 Hana Database
# Prerequisites:
#   - Ansible v2.9+
#   - Functional S4 Hana Database Install
# Dependencies: N/A
# Variables:
#   - sid : SAP ID of the SAP Landscape
#   - hdb_instance_number : Hana Dabase Instance Number
# Example:
#   Stops the Hana Dabase remotely
#    ansible-playbook s4-stop-hana -i 192.168.0.1, -e sid=bh1 -e hdb_instance_number=00
# Authors: Louis Lee,
# Version: 2.9-000001
# Modified: 2020-02-27 - Created
#
# Comments: N/A

- hosts: all
  vars:
    sid: 'bh1'
    hdb_instance_number: '00'

  tasks:
  - name: "Stopping HANA DB"
    command: "/usr/sap/{{ sid|upper }}/HDB{{ hdb_instance_number }}/HDB stop"
    become: true
    become_user: "{{ sid|lower }}adm"
    failed_when: "'hdbdaemon is stopped.' not in hdbstop_output.stdout"
    register: hdbstop_output

  - name: "HDB Stop output"
    debug:
      var: hdbstop_output.stdout_lines

  - name: "Get saphostagent status"
    command: "/usr/sap/hostctrl/exe/saphostexec -status"
    become: true
    register: saphostagent_status
    failed_when: "'FAILED' in saphostagent_status.stderr"
    changed_when: false

  - name: "Display saphostagent status"
    debug:
      var: saphostagent_status.stderr_lines

  - name: "BLOCK - Stop saphostagent"
    block:
    - name: "Stop saphostagent as root"
      command: "/usr/sap/hostctrl/exe/saphostexec -stop"
      become: true

    - name: "Get saphostagent status"
      command: "/usr/sap/hostctrl/exe/saphostexec -status"
      become: true
      register: saphostagent_statusblock
      failed_when: "'FAILED' in saphostagent_statusblock.stderr"
      changed_when: false

    - name: "Display saphostagent status"
      debug:
        var: saphostagent_statusblock.stderr_lines
    when: saphostagent_status.stderr != 'saphostexec stopped '
    #End "BLOCK - Stop saphostagent"

  - name: "Find sidadm processes"
    shell: "ps -fu {{ sid|lower }}adm"
    become: true
    register: "pssidadm_output"
    failed_when: "'FAILED' in pssidadm_output.stderr"
    changed_when: false

  - name: "List process to kill"
    debug:
      var: pssidadm_output.stdout_lines

  - name: "Stop sidadm processes"
    command: "pkill -9 -fu {{ sid|lower }}adm"
    become: true
    failed_when: "'FAILED' in pkillsidadm_output.stderr"
    register: pkillsidadm_output

  - name: "Display stop sidadm output if verbosity >= 1"
    debug:
      var: pkillsidadm_output
      verbosity: 1

  - name: "Get {{ sid|lower }}adm processes"
    command: "ps -fu {{ sid|lower }}adm"
    become: yes
    failed_when: "'FAILED' in sidadmin_processes.stderr"
    register: sidadmin_processes

  - name: "Show {{ sid|lower }}adm processes"
    debug:
      var: sidadmin_processes.stdout_lines
...
