---
# Playbook Name: s4-start-sapapp.yml
# Synopsis: Starts the S4 SapApp
# Description: Standalone playbook that starts the S4 SAP Application
# Prerequisites:
#   - Ansible v2.9+
#   - Functional S4 SapApp Install
# Dependencies: N/A
# Variables:
#   - sid : SAP ID of the SAP App Landscape
#   - ascs_instance_number : ASCS number
# Example:
#   Starts the Hana Dabase remotely
#    ansible-playbook s4-start-hana -i 192.168.0.1, -e sid=br1 -e ascs_instance_number=96
# Authors: Louis Lee,
# Version: 2.9-000001
# Modified: 2020-02-27 - Created
#
# Comments: N/A

- hosts: all
  become: true      # Almost every operation in this playbook/role will require root access
  vars:
    sid: 'br1'
    ascs_instance_number: '96'

  tasks:
  - name: "Get App Hostname"
    command: hostname
    register: sapapphostname_output

  - name: "Save App Hostname"
    set_fact:
      sapapphostname: "{{ sapapphostname_output.stdout }}"

  - debug:
      var: sapapphostname

  - name: "Run sapstartsrv"
    shell: "{{ item }}"
    become: true
    become_user: "{{ sid|lower }}adm"
    become_flags: '-i'
    register: sapstartsrv_output
    loop:
    - "/usr/sap/{{ sid|upper }}/ASCS{{ ascs_instance_number }}/exe/sapstartsrv pf=/usr/sap/{{ sid|upper }}/SYS/profile/{{ sid|upper }}_ASCS{{ ascs_instance_number }}_{{ sapapphostname }} -D -u {{ sid|lower }}adm"
    - "/usr/sap/{{ sid|upper }}/D00/exe/sapstartsrv pf=/usr/sap/{{ sid|upper }}/SYS/profile/{{ sid|upper }}_D00_{{ sapapphostname }} -D -u {{ sid|lower }}adm"

  - name: "Get saphostagent status"
    command: "/usr/sap/hostctrl/exe/saphostexec -status"
    become: true
    register: saphostagent_status
    failed_when: "'FAILED' in saphostagent_status.stderr"
    changed_when: false

  - name: "Display saphostagent status"
    debug:
      var: saphostagent_status.stderr_lines

  - name: "BLOCK - Start saphostagent"
    block:
    - name: "Start saphostagent as root"
      command: "/usr/sap/hostctrl/exe/saphostexec -restart"
      become: true

    - name: "Get saphostagent status"
      command: "/usr/sap/hostctrl/exe/saphostexec -status"
      become: true
      register: saphostagent_statusblock
      failed_when: "'FAILED' in saphostagent_statusblock.stderr"
      changed_when: false

    - name: "Display saphostagent status"
      debug:
        var: saphostagent_statusblock.stderr_lines
    when: "'saphostexec stopped' in saphostagent_status.stderr"
    #End "BLOCK - Start saphostagent"

  - name: "Check HDB connectivity with R3trans"
    shell: "R3trans -d"
    become: yes
    become_user: "{{ sid|lower }}adm"
    become_flags: '-i'
    register: r3trans_output
    retries: 3
    delay: 10
    until: "'R3trans finished (0000).' in r3trans_output.stdout"

  - name: "Display R3trans results"
    debug:
      var: r3trans_output.stdout_lines

  - name: "Start SAP with sapcontrol on SAPApp"
    shell: "sapcontrol -nr 96 -function Start"
    become: yes
    become_user: "{{ sid|lower }}adm"
    become_flags: '-i'
    failed_when: "'Start\nOK' not in sapappstart96_output.stdout"
    register: sapappstart96_output

  - name: "SAPApp Start output"
    debug:
      var: sapappstart96_output


  - name: "Start SAP with sapcontrol on SAPApp"
    shell: "sapcontrol -nr 00 -function Start"
    become: yes
    become_user: "{{ sid|lower }}adm"
    become_flags: '-i'
    failed_when: "'Start\nOK' not in sapappstart00_output.stdout"
    register: sapappstart00_output

  - name: "SAPApp Start output"
    debug:
      var: sapappstart00_output

  - name: "Get {{ sid|lower }}adm processes"
    command: "ps -fu {{ sid|lower }}adm"
    become: yes
    failed_when: "'FAILED' in sidadmin_processes.stderr"
    register: sidadmin_processes

  - name: "Show {{ sid|lower }}adm processes"
    debug:
      var: sidadmin_processes.stdout_lines
...
