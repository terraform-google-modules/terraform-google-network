---
# Playbook Name: s4pce-post-provision-hs.yml
# Description: Performs Post Provisioning tasks on S4PCE instances
#  This playbook contains post-provisioning tasks that should be
#  performed on all S4-PCE Instances for High-Side environments.
#
#  See the play tags below for available subsets.
#
# Dependencies:
#   - Ansible v2.9+
#   - AWS CLI v1.18+
#   - sudo capability or root privileges on target machine
#   - cloud-identify ansible role
#   - s4pce ansible role
#   - tag-management ansible role
#   - repository-management ansible role
#   - aws-cloudwatch-alarms ansible role
#   - aws-cloudwatch-agent ansible
#   - iptables ansible role
#   - clamav ansible role
#   - aide ansible role
#   - postfix-relay ansible role
#
# Variables:
#   Variables dynamically created and used by other roles:
#     application_preset_selection
#     cw_preset_selection
#     aws_tag_product_name
# Example:
#   Execution on remote systems using the s4pce inventory host template
#     ansible-playbook s4pce-post-provision-hs.yml -k -i </PATH-TO/S4PCE-HOST-INVENTORY-FILE>
#
# Example
#   Only run provisioning  on a single instance with ip address of 192.168.1.1
#     ansible-playbook s4pce-post-provision-hs.yml -k -i /tmp/hosts -l 192.168.1.1
#
# Example
#   Execution of a specific plays 'aide' and 'iptables'
#     ansible-playbook s4pce-post-provision-hs.yml -k -i /tmp/hosts --tags 'aide,iptables'
#
#
# Authors: Neelima Gummadi
# Version: 2.9-000001
# Modified: 2022-06-08 - Created playbook
#           2024-12-02 - Use variable for 'aws_region' in tag-management role.
# Comments: |
#   Made a copy of `s4pce-post-provision.yml` to use with fuse
#   This playbook is designed to be used with the s4pce-ansible-inventory-template.yml
#   Play Tags:
#     play0 always            : Generate Metadata
#     play1 tag-management    : (AWS) Sets tags on Instances, Volumes and other AWS Resources
#     play2 cloudwatch-alarms : (AWS) Create Cloudwatch Alarms and Monitoring
#     play3 iptables          : Setup IPTables for Kinesis/Splunk Monitoring
#     play4 clamav            : Setup ClamAV
#     play5 aide              : Setup and Provision AIDE
#     play6 postfix           : Setup postfix relay configuration
#     playEND                 : End of the playbook

#################
##### Play0 #####
#################
- name: "Play0: Generate Metadata"
  hosts: all
  gather_facts: true
  become: false
  tags:
  - play0
  - always

  # Given the scope of S4PCE, and the fact that this is post provisioning. Continue playbook on non-errored hosts.
  any_errors_fatal: no

  vars_prompt:
  - name: playbook_validation_email
    prompt: Address to send validation email to? (leave blank to skip validation)
    private: no
    default: ''

  - name: input_aws_region
    prompt: What is the aws region?
    private: false

  pre_tasks:
  - name: Save Input Variables for later playbook use.
    set_fact:
      validation_email: '{{ playbook_validation_email }}'
      playbook_aws_region: '{{ input_aws_region }}'

  tasks:
  # This will output the following variables: s4pce_firewall_preset_selection,
  - name: "Generate role dynamic variables"
    include_role:
      name: s4pce
      tasks_from: general/variables-create.yml
    vars:
      s4pce_variables_create_nodetype: "{{ spr_nodetype }}"
      s4pce_variables_create_productname: "{{ spr_productname }}"

  # Notes: The output of the cloud-identify role is as follows:
    # cloud_provider/cloud_partition (aws[govcloud,commercial],gcp[gcp],azure[usgovernment,public])
    # machine_id
  - name: Detect Cloud Provider
    include_role:
      name: cloud-identify

  - name: Group by Cloud Provider
    group_by:
      key: "cloud_{{ cloud_provider }}"


#################
##### Play1 #####
#################
- name: "Play1: Sets tags on Instances, Volumes and other AWS Resources"
  hosts: cloud_aws
  gather_facts: false
  become: false
  tags:
  - play1
  - tag-management
  any_errors_fatal: yes

  tasks:
  - name: "Update tags"
    include_role:
      name: tag-management
    vars:
      aws_tag_null_context_control: true
      aws_region: '{{ playbook_aws_region }}'


#################
##### Play2 #####
#################
- name: "Play2: Create Cloudwatch Alarms and Monitoring"
  hosts: cloud_aws
  gather_facts: false
  become: false
  tags:
  - play2
  - cloudwatch-alarms
  any_errors_fatal: no

  tasks:
  - name: "Create AWS CloudWatch Alarms"
    include_role:
      name: aws-cloudwatch-alarms
    vars:
      aws_topic_name: 's4pce-hs-monitoring'
      aws_cloudwatch_alarm_throttle: 3
      aws_sns_subscription_email: "DL_NS2_Fabbioli@sapns2.com"
      cw_preset_selection: "{{ s4pce_cw_preset_selection }}"
      ignore_disks:
        - /dev
        - /dev/shm
        - /sap/staging
        - /hana/staging
        - /boot
        - /staging
        - /usr/sap/trans


#################
##### Play3 #####
#################
- name: "Play3: Setup IPTables for Kinesis/Splunk Monitoring"
  hosts: all
  gather_facts: false
  become: false
  tags:
  - play3
  - iptables
  any_errors_fatal: no

  tasks:
  - name: "Update iptables configuration"
    include_role:
      name: iptables
    vars:
      firewall_preset_selection: "{{ s4pce_firewall_preset_selection }}"
      dynamic_preset_selection: false


#################
##### Play4 #####
#################
- name: "Play4: Setup ClamAV"
  hosts: all
  gather_facts: false
  become: false
  tags:
  - play4
  - clamav
  any_errors_fatal: yes

  tasks:
  - name: "Update clamav configuration"
    include_role:
      name: clamav
    vars:
      clamav_create_cron_schedule: true
      clamav_dir_ignore_pattern: '^/hana/|^/dev/|^/usr/sap/|^/backup/|^/sys|^/proc|^/swap|^/staging'


#################
##### Play5 #####
#################
- name: "Play5: Setup AIDE"
  hosts: all
  gather_facts: false
  become: false
  tags:
  - play5
  - aide
  any_errors_fatal: yes

  tasks:
  - name: "Update aide configuration"
    include_role:
      name: aide
      apply:
        become: true
    vars:
      aide_async_update: true


#################
##### Play6 #####
#################
- name: "Play6: Setup postfix"
  hosts: all
  gather_facts: false
  become: false
  tags:
  - play6
  - postfix
  any_errors_fatal: yes

  tasks:
  - name: "Configure postfix"
    include_role:
      name: postfix-relay
    vars:
      postfix_relay_smtp_address: mail.pce.s4.hs.sapns2.internal

  - name: "Send Validation Email"
    run_once: true
    when: validation_email != ''
    mail:
      body: "Validation Email from {{ inventory_hostname }}"
      to: "{{ validation_email }}"
      subject: 'SMTP Test'
      from: smtp <notifications@pce.s4.hs.sapns2.internal>

###################
##### PlayEND #####
###################
- name: "PlayEND: End of playbook"
  hosts: all
  gather_facts: false
  become: false
  tags:
  - play-end
  - always
  - the-end

  tasks:
  - name: "This is the end"
    delegate_to: localhost
    run_once: true
    debug:
      msg: "Of the world as we know it"
...
